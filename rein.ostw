import "base.ostw";
void rein_setup()
{
    //SetDamageDealt(EventPlayer(),25); done in custom game settings but listed here as well
    //shield health 2000
    //shield regen 200 up from 144
    SetMaxHealth(EventPlayer(),(2000/1400)*100);
    SetKnockbackReceived(EventPlayer(),143);
    //armor 200
    //health 300
    base_armor = 200;
    base_shield = 0;
    base_health = 300;
    self_move_speed = 100;

    //hammer damage 75

    //fire strike 1
    //fire strike damage 100
    
    //charge 300 damage
    //cooldown 10

    //earthshatter 50 damage flat

    //no tank passive
    role = 1;
    current_hero = Hero.Reinhardt;

    while(MaxHealth() != base_health + base_armor + base_shield && health_set == false)
    {
        health_set = true;
        apply_custom_health();
        health_set = false;
        Wait(0.1);
    }
    //CreateHudText(EventPlayer(),"{0}\n{1}\n{2}".Format([IsButtonHeld(EventPlayer(),Button.Ultimate),UltimateChargePercent(EventPlayer()),ServerLoadPeak()]),null,null,Location.Left,0,Color.White,Color.White,Color.White,HudTextRev.String,Spectators.VisibleAlways);
}

rule: "Rein Action"
Event.OngoingPlayer
Player.Reinhardt
{
    if (IsUsingAbility2())
    {
        //fire strike
        SetAbilityCharge(EventPlayer(),Button.Ability2,0);
        WaitUntil(IsUsingAbility2() == false,10);
        SetAbilityCooldown(EventPlayer(),Button.Ability2,10);
    }
    else if(IsFiringSecondary())
    {
        //shield
        self_move_speed -= 28;
        SetMoveSpeed(EventPlayer(),self_move_speed);
        WaitUntil(!IsFiringSecondary(),1000);
        self_move_speed += 28;
        SetMoveSpeed(EventPlayer(),self_move_speed);
    }


    Wait(1/8);
    LoopIf(HeroOf(EventPlayer()) == Hero.Reinhardt);
}
rule: "Rein Damage"
Event.OnDamageDealt
Player.Reinhardt
if(EventDamage() != null)
{
    if(EventAbility() == Button.PrimaryFire)
    {
        Damage(Victim(),Attacker(),200);
    }
    else if(EventAbility() == Button.Ability2)
    {
        Damage(Victim(),Attacker(),280);
    }
    else if(EventAbility() == Button.Ability1)
    {
        Damage(Victim(),Attacker(),925);
    }
    else if(EventAbility() == Button.Ultimate && !EventWasCriticalHit())
    {
        Damage(Victim(),Attacker(),150);
    }
    
}